#!/usr/bin/env python3
# vim:ts=4:sw=4:ft=python:fileencoding=utf-8
# Copyright Â© 2015-2021 Carl Chenet <carl.chenet@ohmytux.com>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

from argparse import ArgumentParser
from os import getcwd
from os import linesep
import sys
import requests

__version__ = '0.2'

epilog = 'For more information: https://feed2toot.readthedocs.io'
description = 'Create a Sharkey app for Feed2toot'
parser = ArgumentParser(prog='register_feed2toot_app',
                        description=description,
                        epilog=epilog)
parser.add_argument('--version', action='version', version=__version__)
parser.add_argument('--user-credentials-file', dest='usercredfile', help='the name of the user credentials for the Mastodon app', default='feed2toot_usercred.txt')
parser.add_argument('--name', help='the name of the Mastodon app', default='feed2toot')
opts = parser.parse_args()

usercredfile=opts.usercredfile

headline = f'{linesep}This script generates the Mastodon application credentials for Feed2toot.{linesep}{usercredfile} will be written{linesep}in the current directory: {getcwd()}.{linesep}WARNING: previous files with the same names will be overwritten.{linesep}{linesep}A connection is also initiated to create the application.{linesep}Your password is *not* stored.{linesep}'
print(headline)


# get the instance
instance = input('Sharkey instance URL: ')
if not instance.startswith('http'):
    instance = ''.join(['https://', instance])

print('Create a token with permission to compose notes and edit the drive (for images).')

# get the user token
userok = False
while not userok:
    user = input('Sharkey access token: ')
    if not user:
        print('Your token can not be empty.')
        userok = False
    else:
        userok = True

with open(usercredfile, "w", encoding="utf-8") as f:
    f.write(user)

try:
    response = requests.post(f'{instance}/api/ping', headers=dict(Authorization=f'Bearer {user}'), json=dict())
    if not 'pong' in response.json():
        raise Exception('Did not receive correct server response')
except Exception as err:
    print(err)
    sys.exit(f'{linesep}I guess you entered a bad login or password.{linesep}')

print(f'The file {usercredfile} was created in the current directory.')
sys.exit(0)
